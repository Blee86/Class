/* Map initializing */
	/*
    char map_array[20] = {-12, -32, 0, -32, 0, -7, 5, -7, 5, -14, 25, -14, 25, 0, 0, 0, 0, 47, -12, 47};
    uint8_t length = 20;
    char x_inc = abs(minimum(map_array, 20, 0));
    char y_inc = abs(minimum(map_array, 20, 1));
    
    updateMapArray(map_array, 20, x_inc, y_inc);
    int i = 0;
    
    uint8_t x_length = maximum(map_array, 20, 0);
    uint8_t y_length = maximum(map_array, 20, 1);
   
    // Map
    uint8_t map[x_length+1][y_length+1];
    
    // Set Initial value
    // All set to zero
    int j =0;
    
    for ( i =0; i < x_length; i++) {
        for ( j=0; j < y_length; j++ ){
            map[i][j] = 0;
        }
    }
    
    // Connect points
    uint8_t x,y,x1, y1, x2, y2;
    uint8_t distance;
    
    for (j=0; j < length; j += 2) {
        if ( j == 18) {
            x1 = map_array[j];
            y1 = map_array[j+1];
            
            x2 = map_array[0];
            y2 = map_array[1];
        }
        else{
            x1 = map_array[j];
            y1 = map_array[j+1];
            x2 = map_array[j+2];
            y2 = map_array[j+3];
        }
        
        if (x1 == x2) {
            if (y1 < y2) {
                distance = y2 - y1;
                x = x1;
                y = y1;
                for (i = 0; i < distance; i++) {
                    map[x][y+i] = 1;
                }
            }
            else {
                distance = y1 - y2;
                x = x1;
                y = y2;
                for ( i = 0; i < distance; i++) {
                    map[x][y+i] = 1;
                }
            }
        }
        else if (y1 == y2) {
            if (x1 < x2) {
                distance = x2 - x1;
                x = x1;
                y = y1;
                for ( i = 0; i < distance; i++) {
                    map[x+i][y] = 1;
                }
            }
            else {
                distance = x1 - x2;
                x = x2;
                y = y1;
                for ( i = 0; i < distance;  i++) {
                    map[x+i][y] = 1;
                }
            }
        }
    }
					  */